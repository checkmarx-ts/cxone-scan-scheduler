on: 
    workflow_call:
      inputs:
        tag:
          description: 'The version tag to use for stamping build artifacts and naming generated archives'
          required: true
          type: string
        prerelease:
          description: 'Set to true if published build is a prerelease'
          type: boolean
          required: true
      secrets:
        PACKAGE_USER:
          required: true
        PACKAGE_PAT:
          required: true
env:
  DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/cxone/scan-scheduler
                
jobs:
  publish-scheduler:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USER }}
          password: ${{ secrets.PACKAGE_PAT }}

      - name: Fetch Code @ tag ${{ inputs.tag }}
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
        with:
          ref: refs/tags/${{ inputs.tag }}

      - name: Update version
        run: |
            echo __version__='${{ inputs.tag }}' > __version__.py

      - name: Build and Push Docker Image
        run: |
          BRIEFTAG=${{ inputs.tag }}
          docker build -f Dockerfile -t $DOCKER_REPO:$BRIEFTAG .
          [ ${{ inputs.prerelease }} = false ] && docker tag $DOCKER_REPO:$BRIEFTAG $DOCKER_REPO:latest || :
          docker push --all-tags $DOCKER_REPO
  
  publish-release:
    runs-on: ubuntu-latest
    needs: [publish-scheduler]
    steps:
      - name: Make release text
        run: |
          echo "# CxOne Scan Scheduler ${{ inputs.tag }}" > release.md
          echo Executable artifacts are published in a container. >> release.md
          echo '```' >> release.md
          [ ${{ inputs.prerelease }} = false ] && echo "docker pull $DOCKER_REPO:latest" >> release.md || :
          echo "docker pull $DOCKER_REPO:${{ inputs.tag }}" >> release.md
          echo '```' >> release.md
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          bodyFile: release.md
          name: ${{ inputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          tag: ${{ inputs.tag }}


         